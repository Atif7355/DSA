class Solution {
public:
    vector<int> maxSlidingWindow(vector<int>& nums, int k) {
        int l = nums.size();
if(l==0) return {};

    if(k==1){
        return nums;
    }
    deque<int> q;
    vector<int> v;
        
    int i = 0 ;
    for(;i<k;i++){
        while(!q.empty() && nums[q.back()] <= nums[i]){
            q.pop_back();   
        }
        q.push_back(i);   
    }
    for(;i<l;i++){
        
        v.push_back(nums[q.front()]);
        
        while(!q.empty() && q.front()<=i-k){
            q.pop_front();
        }
        
        while(!q.empty() && nums[q.back()] <= nums[i]){
            q.pop_back();
        }
        q.push_back(i);
    }
    v.push_back(nums[q.front()]);
    return v;
    
    }
};