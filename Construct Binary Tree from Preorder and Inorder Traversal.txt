class Solution {
public:
    unordered_map<int,int> m;
    int idx=0;
    TreeNode* solve(vector<int>& preorder,vector<int>& inorder,int lb,int ub){
        if(lb>ub) return NULL;
        TreeNode* res=new TreeNode(preorder[idx++]);
        if(lb==ub) return res;
        int mid=m[res->val];
        res->left=solve(preorder,inorder,lb,mid-1);
        res->right=solve(preorder,inorder,mid+1,ub);
        return res;
        }
    TreeNode* buildTree(vector<int>& preorder, vector<int>& inorder) {
        idx=0;
        m.clear();
        int n=inorder.size();
        for(int i=0;i<n;i++){
            m[inorder[i]]=i;
            
        }
        TreeNode* root=solve(preorder,inorder,0,n-1);
        return root;
    }
};