class Solution
{
    public:
    //Function to find the smallest window in the string s consisting
    //of all the characters of string p.
    string smallestWindow (string s, string p)
    {
        // Your code here
int mp[256] = {0};
       
       // unordered_map<int,int> hash;
       int unique_words = 0;
       
       for(int i = 0; i < p.size(); i++)
       {
           if(mp[p[i]] == 0)
           {
               unique_words++;
           }
           
           mp[p[i]]++;
       }
       
       int len= 1e6 , si = 0, ei =0;
       
       int i=0, j=0;
       
       while(j< s.size())
       {
           mp[s[j]]--;
           
           if(mp[s[j]] == 0)
           {
               unique_words--;
           }
           
           if(unique_words == 0)
           {
               while(unique_words == 0)
               {
                   if(len > j-i+1)
                   {
                       len = j-i+1;
                       si = i; 
                       ei =j;
                   }
                   
                   mp[s[i]]++;
                   
                   if(mp[s[i]] == 1)
                   unique_words++;
                   
                   i++;
               }
           }
           
           j++;
       }
       
       if(len == 1e6) return "-1";
       
       return s.substr( si , len);
    }
};