class Solution{
public:
    int dp[1002][1002];
   int solve(int N, int W, int val[], int wt[]){
       // initialize
       for(int i=0;i<=N;i++){
           for(int j=0;j<=W;j++){
               if(i==0||j==0){
                   dp[i][j]=0;
               }
           }
       }
       for(int i=1;i<=N;i++){
           for(int j=0;j<=W;j++){
               
               if(wt[i-1]<=j){
                   dp[i][j]=max(val[i-1]+dp[i][j-wt[i-1]],dp[i-1][j]);
               }
               else{
                   dp[i][j]=dp[i-1][j];
               }
           }
       }
       return dp[N][W];
   }
   int knapSack(int N, int W, int val[], int wt[])
   {
       memset(dp,-1,sizeof(dp));
       return solve(N,W,val,wt);
   }
};